Nonterminals useless in grammar

   binary_op
   function_name
   unary_op


Terminals unused in grammar

   WHILE
   GL_FRAGDEPTH
   GL_FRAGCOORD
   GL_TEXCOORD
   GL_COLOR
   GL_SECONDARY
   GL_FOGFRAGCOORD
   GL_LIGHT_HALF
   GL_MATERIAL_SHININESS
   ENV1
   ENV2
   ENV3
   INC
   DEC
   '['
   ']'
   '('
   ')'


Rules useless in parser due to conflicts

   10 declaration: %empty


State 4 conflicts: 13 shift/reduce, 7 reduce/reduce
State 35 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 60 conflicts: 13 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: scope

    2 scope: LCURL declarations statements RCURL

    3 declarations: declarations declaration
    4             | %empty

    5 statements: statements statement
    6           | %empty

    7 declaration: type IDENTIFIER COLON
    8            | type IDENTIFIER EQUAL exp COLON
    9            | CONST type IDENTIFIER EQUAL exp COLON
   10            | %empty

   11 statement: variable EQUAL exp COLON
   12          | IF LBRACKET exp RBRACKET statement else_statement
   13          | COLON
   14          | scope

   15 else_statement: ELSE statement
   16               | %empty

   17 type: INT_T
   18     | IVEC2
   19     | IVEC3
   20     | IVEC4
   21     | BOOL_T
   22     | BVEC2
   23     | BVEC3
   24     | BVEC4
   25     | FLOAT_T
   26     | VEC2
   27     | VEC3
   28     | VEC4

   29 exp: %empty
   30    | constructor
   31    | function
   32    | INT
   33    | FLOAT
   34    | T
   35    | F
   36    | variable
   37    | EXCLAM exp
   38    | SUB exp
   39    | LBRACKET exp RBRACKET
   40    | exp ADD exp
   41    | exp SUB exp
   42    | exp MUL exp
   43    | exp DIV exp
   44    | exp EXP exp
   45    | exp AND exp
   46    | exp OR exp
   47    | exp EQ exp
   48    | exp NEQ exp
   49    | exp LESS exp
   50    | exp LEQ exp
   51    | exp GREATER exp
   52    | exp GEQ exp

   53 variable: IDENTIFIER
   54         | IDENTIFIER LSQUARE INT RSQUARE
   55         | GL_LIGHT_AMBIENT
   56         | GL_FRAGCOLOR

   57 constructor: type LBRACKET arguments RBRACKET

   58 function: FUNC LBRACKET arguments RBRACKET

   59 arguments: arguments COMMA exp
   60          | exp


Terminals, with rules where they appear

$end (0) 0
'(' (40)
')' (41)
'[' (91)
']' (93)
error (256)
IDENTIFIER (258) 7 8 9 53 54
INT (259) 32 54
FLOAT (260) 33
T (261) 34
F (262) 35
IF (263) 12
ELSE (264) 15
WHILE (265)
INT_T (266) 17
FLOAT_T (267) 25
BOOL_T (268) 21
VEC2 (269) 26
VEC3 (270) 27
VEC4 (271) 28
BVEC2 (272) 22
BVEC3 (273) 23
BVEC4 (274) 24
IVEC2 (275) 18
IVEC3 (276) 19
IVEC4 (277) 20
GL_FRAGCOLOR (278) 56
GL_FRAGDEPTH (279)
GL_FRAGCOORD (280)
GL_TEXCOORD (281)
GL_COLOR (282)
GL_SECONDARY (283)
GL_FOGFRAGCOORD (284)
GL_LIGHT_HALF (285)
GL_LIGHT_AMBIENT (286) 55
GL_MATERIAL_SHININESS (287)
ENV1 (288)
ENV2 (289)
ENV3 (290)
CONST (291) 9
FUNC (292) 58
INC (293)
DEC (294)
COMMA (295) 59
ADD (296) 40
SUB (297) 38 41
MUL (298) 42
DIV (299) 43
EXP (300) 44
AND (301) 45
OR (302) 46
EQ (303) 47
NEQ (304) 48
LESS (305) 49
GREATER (306) 51
LEQ (307) 50
GEQ (308) 52
COLON (309) 7 8 9 11 13
EQUAL (310) 8 9 11
EXCLAM (311) 37
LBRACKET (312) 12 39 57 58
RBRACKET (313) 12 39 57 58
LCURL (314) 2
RCURL (315) 2
LSQUARE (316) 54
RSQUARE (317) 54


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
program (68)
    on left: 1, on right: 0
scope (69)
    on left: 2, on right: 1 14
declarations (70)
    on left: 3 4, on right: 2 3
statements (71)
    on left: 5 6, on right: 2 5
declaration (72)
    on left: 7 8 9 10, on right: 3
statement (73)
    on left: 11 12 13 14, on right: 5 12 15
else_statement (74)
    on left: 15 16, on right: 12
type (75)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28, on right: 7 8 9 57
exp (76)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52, on right: 8 9 11 12 37 38 39 40 41 42 43 44
    45 46 47 48 49 50 51 52 59 60
variable (77)
    on left: 53 54 55 56, on right: 11 36
constructor (78)
    on left: 57, on right: 30
function (79)
    on left: 58, on right: 31
arguments (80)
    on left: 59 60, on right: 57 58 59


State 0

    0 $accept: . program $end

    LCURL  shift, and go to state 1

    program  go to state 2
    scope    go to state 3


State 1

    2 scope: LCURL . declarations statements RCURL

    $default  reduce using rule 4 (declarations)

    declarations  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: scope .

    $default  reduce using rule 1 (program)


State 4

    2 scope: LCURL declarations . statements RCURL
    3 declarations: declarations . declaration

    INT_T    shift, and go to state 6
    FLOAT_T  shift, and go to state 7
    BOOL_T   shift, and go to state 8
    VEC2     shift, and go to state 9
    VEC3     shift, and go to state 10
    VEC4     shift, and go to state 11
    BVEC2    shift, and go to state 12
    BVEC3    shift, and go to state 13
    BVEC4    shift, and go to state 14
    IVEC2    shift, and go to state 15
    IVEC3    shift, and go to state 16
    IVEC4    shift, and go to state 17
    CONST    shift, and go to state 18

    IDENTIFIER        reduce using rule 6 (statements)
    IDENTIFIER        [reduce using rule 10 (declaration)]
    IF                reduce using rule 6 (statements)
    IF                [reduce using rule 10 (declaration)]
    INT_T             [reduce using rule 10 (declaration)]
    FLOAT_T           [reduce using rule 10 (declaration)]
    BOOL_T            [reduce using rule 10 (declaration)]
    VEC2              [reduce using rule 10 (declaration)]
    VEC3              [reduce using rule 10 (declaration)]
    VEC4              [reduce using rule 10 (declaration)]
    BVEC2             [reduce using rule 10 (declaration)]
    BVEC3             [reduce using rule 10 (declaration)]
    BVEC4             [reduce using rule 10 (declaration)]
    IVEC2             [reduce using rule 10 (declaration)]
    IVEC3             [reduce using rule 10 (declaration)]
    IVEC4             [reduce using rule 10 (declaration)]
    GL_FRAGCOLOR      reduce using rule 6 (statements)
    GL_FRAGCOLOR      [reduce using rule 10 (declaration)]
    GL_LIGHT_AMBIENT  reduce using rule 6 (statements)
    GL_LIGHT_AMBIENT  [reduce using rule 10 (declaration)]
    CONST             [reduce using rule 10 (declaration)]
    COLON             reduce using rule 6 (statements)
    COLON             [reduce using rule 10 (declaration)]
    LCURL             reduce using rule 6 (statements)
    LCURL             [reduce using rule 10 (declaration)]
    RCURL             reduce using rule 6 (statements)
    RCURL             [reduce using rule 10 (declaration)]
    $default          reduce using rule 6 (statements)

    statements   go to state 19
    declaration  go to state 20
    type         go to state 21


State 5

    0 $accept: program $end .

    $default  accept


State 6

   17 type: INT_T .

    $default  reduce using rule 17 (type)


State 7

   25 type: FLOAT_T .

    $default  reduce using rule 25 (type)


State 8

   21 type: BOOL_T .

    $default  reduce using rule 21 (type)


State 9

   26 type: VEC2 .

    $default  reduce using rule 26 (type)


State 10

   27 type: VEC3 .

    $default  reduce using rule 27 (type)


State 11

   28 type: VEC4 .

    $default  reduce using rule 28 (type)


State 12

   22 type: BVEC2 .

    $default  reduce using rule 22 (type)


State 13

   23 type: BVEC3 .

    $default  reduce using rule 23 (type)


State 14

   24 type: BVEC4 .

    $default  reduce using rule 24 (type)


State 15

   18 type: IVEC2 .

    $default  reduce using rule 18 (type)


State 16

   19 type: IVEC3 .

    $default  reduce using rule 19 (type)


State 17

   20 type: IVEC4 .

    $default  reduce using rule 20 (type)


State 18

    9 declaration: CONST . type IDENTIFIER EQUAL exp COLON

    INT_T    shift, and go to state 6
    FLOAT_T  shift, and go to state 7
    BOOL_T   shift, and go to state 8
    VEC2     shift, and go to state 9
    VEC3     shift, and go to state 10
    VEC4     shift, and go to state 11
    BVEC2    shift, and go to state 12
    BVEC3    shift, and go to state 13
    BVEC4    shift, and go to state 14
    IVEC2    shift, and go to state 15
    IVEC3    shift, and go to state 16
    IVEC4    shift, and go to state 17

    type  go to state 22


State 19

    2 scope: LCURL declarations statements . RCURL
    5 statements: statements . statement

    IDENTIFIER        shift, and go to state 23
    IF                shift, and go to state 24
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    COLON             shift, and go to state 27
    LCURL             shift, and go to state 1
    RCURL             shift, and go to state 28

    scope      go to state 29
    statement  go to state 30
    variable   go to state 31


State 20

    3 declarations: declarations declaration .

    $default  reduce using rule 3 (declarations)


State 21

    7 declaration: type . IDENTIFIER COLON
    8            | type . IDENTIFIER EQUAL exp COLON

    IDENTIFIER  shift, and go to state 32


State 22

    9 declaration: CONST type . IDENTIFIER EQUAL exp COLON

    IDENTIFIER  shift, and go to state 33


State 23

   53 variable: IDENTIFIER .
   54         | IDENTIFIER . LSQUARE INT RSQUARE

    LSQUARE  shift, and go to state 34

    $default  reduce using rule 53 (variable)


State 24

   12 statement: IF . LBRACKET exp RBRACKET statement else_statement

    LBRACKET  shift, and go to state 35


State 25

   56 variable: GL_FRAGCOLOR .

    $default  reduce using rule 56 (variable)


State 26

   55 variable: GL_LIGHT_AMBIENT .

    $default  reduce using rule 55 (variable)


State 27

   13 statement: COLON .

    $default  reduce using rule 13 (statement)


State 28

    2 scope: LCURL declarations statements RCURL .

    $default  reduce using rule 2 (scope)


State 29

   14 statement: scope .

    $default  reduce using rule 14 (statement)


State 30

    5 statements: statements statement .

    $default  reduce using rule 5 (statements)


State 31

   11 statement: variable . EQUAL exp COLON

    EQUAL  shift, and go to state 36


State 32

    7 declaration: type IDENTIFIER . COLON
    8            | type IDENTIFIER . EQUAL exp COLON

    COLON  shift, and go to state 37
    EQUAL  shift, and go to state 38


State 33

    9 declaration: CONST type IDENTIFIER . EQUAL exp COLON

    EQUAL  shift, and go to state 39


State 34

   54 variable: IDENTIFIER LSQUARE . INT RSQUARE

    INT  shift, and go to state 40


State 35

   12 statement: IF LBRACKET . exp RBRACKET statement else_statement

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 50
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 36

   11 statement: variable EQUAL . exp COLON

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 54
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 37

    7 declaration: type IDENTIFIER COLON .

    $default  reduce using rule 7 (declaration)


State 38

    8 declaration: type IDENTIFIER EQUAL . exp COLON

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 55
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 39

    9 declaration: CONST type IDENTIFIER EQUAL . exp COLON

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 56
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 40

   54 variable: IDENTIFIER LSQUARE INT . RSQUARE

    RSQUARE  shift, and go to state 57


State 41

   32 exp: INT .

    $default  reduce using rule 32 (exp)


State 42

   33 exp: FLOAT .

    $default  reduce using rule 33 (exp)


State 43

   34 exp: T .

    $default  reduce using rule 34 (exp)


State 44

   35 exp: F .

    $default  reduce using rule 35 (exp)


State 45

   58 function: FUNC . LBRACKET arguments RBRACKET

    LBRACKET  shift, and go to state 58


State 46

   38 exp: SUB . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 59
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 47

   37 exp: EXCLAM . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 60
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 48

   39 exp: LBRACKET . exp RBRACKET

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 61
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 49

   57 constructor: type . LBRACKET arguments RBRACKET

    LBRACKET  shift, and go to state 62


State 50

   12 statement: IF LBRACKET exp . RBRACKET statement else_statement
   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD       shift, and go to state 63
    SUB       shift, and go to state 64
    MUL       shift, and go to state 65
    DIV       shift, and go to state 66
    EXP       shift, and go to state 67
    AND       shift, and go to state 68
    OR        shift, and go to state 69
    EQ        shift, and go to state 70
    NEQ       shift, and go to state 71
    LESS      shift, and go to state 72
    GREATER   shift, and go to state 73
    LEQ       shift, and go to state 74
    GEQ       shift, and go to state 75
    RBRACKET  shift, and go to state 76


State 51

   36 exp: variable .

    $default  reduce using rule 36 (exp)


State 52

   30 exp: constructor .

    $default  reduce using rule 30 (exp)


State 53

   31 exp: function .

    $default  reduce using rule 31 (exp)


State 54

   11 statement: variable EQUAL exp . COLON
   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75
    COLON    shift, and go to state 77


State 55

    8 declaration: type IDENTIFIER EQUAL exp . COLON
   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75
    COLON    shift, and go to state 78


State 56

    9 declaration: CONST type IDENTIFIER EQUAL exp . COLON
   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75
    COLON    shift, and go to state 79


State 57

   54 variable: IDENTIFIER LSQUARE INT RSQUARE .

    $default  reduce using rule 54 (variable)


State 58

   58 function: FUNC LBRACKET . arguments RBRACKET

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 80
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53
    arguments    go to state 81


State 59

   38 exp: SUB exp .
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 38 (exp)


State 60

   37 exp: EXCLAM exp .
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75

    ADD       [reduce using rule 37 (exp)]
    SUB       [reduce using rule 37 (exp)]
    MUL       [reduce using rule 37 (exp)]
    DIV       [reduce using rule 37 (exp)]
    EXP       [reduce using rule 37 (exp)]
    AND       [reduce using rule 37 (exp)]
    OR        [reduce using rule 37 (exp)]
    EQ        [reduce using rule 37 (exp)]
    NEQ       [reduce using rule 37 (exp)]
    LESS      [reduce using rule 37 (exp)]
    GREATER   [reduce using rule 37 (exp)]
    LEQ       [reduce using rule 37 (exp)]
    GEQ       [reduce using rule 37 (exp)]
    $default  reduce using rule 37 (exp)


State 61

   39 exp: LBRACKET exp . RBRACKET
   40    | exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD       shift, and go to state 63
    SUB       shift, and go to state 64
    MUL       shift, and go to state 65
    DIV       shift, and go to state 66
    EXP       shift, and go to state 67
    AND       shift, and go to state 68
    OR        shift, and go to state 69
    EQ        shift, and go to state 70
    NEQ       shift, and go to state 71
    LESS      shift, and go to state 72
    GREATER   shift, and go to state 73
    LEQ       shift, and go to state 74
    GEQ       shift, and go to state 75
    RBRACKET  shift, and go to state 82


State 62

   57 constructor: type LBRACKET . arguments RBRACKET

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 80
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53
    arguments    go to state 83


State 63

   40 exp: exp ADD . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 84
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 64

   41 exp: exp SUB . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 85
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 65

   42 exp: exp MUL . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 86
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 66

   43 exp: exp DIV . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 87
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 67

   44 exp: exp EXP . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 88
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 68

   45 exp: exp AND . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 89
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 69

   46 exp: exp OR . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 90
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 70

   47 exp: exp EQ . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 91
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 71

   48 exp: exp NEQ . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 92
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 72

   49 exp: exp LESS . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 93
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 73

   51 exp: exp GREATER . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 94
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 74

   50 exp: exp LEQ . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 95
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 75

   52 exp: exp GEQ . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 96
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 76

   12 statement: IF LBRACKET exp RBRACKET . statement else_statement

    IDENTIFIER        shift, and go to state 23
    IF                shift, and go to state 24
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    COLON             shift, and go to state 27
    LCURL             shift, and go to state 1

    scope      go to state 29
    statement  go to state 97
    variable   go to state 31


State 77

   11 statement: variable EQUAL exp COLON .

    $default  reduce using rule 11 (statement)


State 78

    8 declaration: type IDENTIFIER EQUAL exp COLON .

    $default  reduce using rule 8 (declaration)


State 79

    9 declaration: CONST type IDENTIFIER EQUAL exp COLON .

    $default  reduce using rule 9 (declaration)


State 80

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp
   60 arguments: exp .

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75

    $default  reduce using rule 60 (arguments)


State 81

   58 function: FUNC LBRACKET arguments . RBRACKET
   59 arguments: arguments . COMMA exp

    COMMA     shift, and go to state 98
    RBRACKET  shift, and go to state 99


State 82

   39 exp: LBRACKET exp RBRACKET .

    $default  reduce using rule 39 (exp)


State 83

   57 constructor: type LBRACKET arguments . RBRACKET
   59 arguments: arguments . COMMA exp

    COMMA     shift, and go to state 98
    RBRACKET  shift, and go to state 100


State 84

   40 exp: exp . ADD exp
   40    | exp ADD exp .
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 40 (exp)


State 85

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   41    | exp SUB exp .
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 41 (exp)


State 86

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   42    | exp MUL exp .
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    EXP  shift, and go to state 67

    $default  reduce using rule 42 (exp)


State 87

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   43    | exp DIV exp .
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    EXP  shift, and go to state 67

    $default  reduce using rule 43 (exp)


State 88

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   44    | exp EXP exp .
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    EXP  shift, and go to state 67

    $default  reduce using rule 44 (exp)


State 89

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   45    | exp AND exp .
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75

    $default  reduce using rule 45 (exp)


State 90

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   46    | exp OR exp .
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75

    $default  reduce using rule 46 (exp)


State 91

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   47    | exp EQ exp .
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64
    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 47 (exp)


State 92

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   48    | exp NEQ exp .
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64
    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 48 (exp)


State 93

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   49    | exp LESS exp .
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64
    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 49 (exp)


State 94

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   51    | exp GREATER exp .
   52    | exp . GEQ exp

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64
    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 51 (exp)


State 95

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   50    | exp LEQ exp .
   51    | exp . GREATER exp
   52    | exp . GEQ exp

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64
    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 50 (exp)


State 96

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp
   52    | exp GEQ exp .

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64
    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    EXP  shift, and go to state 67

    $default  reduce using rule 52 (exp)


State 97

   12 statement: IF LBRACKET exp RBRACKET statement . else_statement

    ELSE  shift, and go to state 101

    ELSE      [reduce using rule 16 (else_statement)]
    $default  reduce using rule 16 (else_statement)

    else_statement  go to state 102


State 98

   59 arguments: arguments COMMA . exp

    IDENTIFIER        shift, and go to state 23
    INT               shift, and go to state 41
    FLOAT             shift, and go to state 42
    T                 shift, and go to state 43
    F                 shift, and go to state 44
    INT_T             shift, and go to state 6
    FLOAT_T           shift, and go to state 7
    BOOL_T            shift, and go to state 8
    VEC2              shift, and go to state 9
    VEC3              shift, and go to state 10
    VEC4              shift, and go to state 11
    BVEC2             shift, and go to state 12
    BVEC3             shift, and go to state 13
    BVEC4             shift, and go to state 14
    IVEC2             shift, and go to state 15
    IVEC3             shift, and go to state 16
    IVEC4             shift, and go to state 17
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    FUNC              shift, and go to state 45
    SUB               shift, and go to state 46
    EXCLAM            shift, and go to state 47
    LBRACKET          shift, and go to state 48

    SUB       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)

    type         go to state 49
    exp          go to state 103
    variable     go to state 51
    constructor  go to state 52
    function     go to state 53


State 99

   58 function: FUNC LBRACKET arguments RBRACKET .

    $default  reduce using rule 58 (function)


State 100

   57 constructor: type LBRACKET arguments RBRACKET .

    $default  reduce using rule 57 (constructor)


State 101

   15 else_statement: ELSE . statement

    IDENTIFIER        shift, and go to state 23
    IF                shift, and go to state 24
    GL_FRAGCOLOR      shift, and go to state 25
    GL_LIGHT_AMBIENT  shift, and go to state 26
    COLON             shift, and go to state 27
    LCURL             shift, and go to state 1

    scope      go to state 29
    statement  go to state 104
    variable   go to state 31


State 102

   12 statement: IF LBRACKET exp RBRACKET statement else_statement .

    $default  reduce using rule 12 (statement)


State 103

   40 exp: exp . ADD exp
   41    | exp . SUB exp
   42    | exp . MUL exp
   43    | exp . DIV exp
   44    | exp . EXP exp
   45    | exp . AND exp
   46    | exp . OR exp
   47    | exp . EQ exp
   48    | exp . NEQ exp
   49    | exp . LESS exp
   50    | exp . LEQ exp
   51    | exp . GREATER exp
   52    | exp . GEQ exp
   59 arguments: arguments COMMA exp .

    ADD      shift, and go to state 63
    SUB      shift, and go to state 64
    MUL      shift, and go to state 65
    DIV      shift, and go to state 66
    EXP      shift, and go to state 67
    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQ       shift, and go to state 70
    NEQ      shift, and go to state 71
    LESS     shift, and go to state 72
    GREATER  shift, and go to state 73
    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75

    $default  reduce using rule 59 (arguments)


State 104

   15 else_statement: ELSE statement .

    $default  reduce using rule 15 (else_statement)
